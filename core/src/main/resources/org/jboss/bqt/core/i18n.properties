#
# JBoss, Home of Professional Open Source.
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership.  Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.
#
ArgCheck.isNonNegativeInt=Expected argument to be non-negative but argument= {0}
ArgCheck.isNonPositiveInt=Expected argument to be non-positive but argument= {0}
ArgCheck.isNegativeInt=Expected argument to be negative but argument= {0}
ArgCheck.isPositiveInt=Expected argument to be positive but argument= {0}
ArgCheck.isStringNonZeroLength=Expected argument to have at least one character
ArgCheck.isNonNull=Expected argument to be non-null but got null
ArgCheck.isNull=Expected argument to be null but got non-null
ArgCheck.isInstanceOf=Expected argument to be an instance of {0}; was instance of {1}
ArgCheck.isCollectionNotEmpty=Expected collection to be non-empty
ArgCheck.isMapNotEmpty=Expected map to be non-empty
ArgCheck.isArrayNotEmpty=Expected array to be non-empty
ArgCheck.isNotSame={0} must not be the same as {1}.
ArgCheck.contains=Expected collection to contain value, but it did not
ArgCheck.containsKey=Expected map to contain key, but it did not

ReflectionHelper.errorConstructing=Unable to create a ReflectionHelper instance with a null target class.

FileUtils.File_does_not_exist._1=File {0} does not exist.
FileUtils.Not_a_directory=\"{0}\" is not a directory.
FileUtils.The_name_of_the_file_may_not_be_null=The name of the file may not be null
FileUtils.The_file_extension_may_not_be_null=The file extension may not be null
FileUtils.Unable_to_create_file_in=Unable to create file in \"{0}\"
FileUtils.Unable_to_write_file_in=Unable to create file in \"{0}\"
FileUtils.Unable_to_read_file_in=Unable to create file in \"{0}\"
FileUtils.Unable_to_rename_file_in=Unable to create file in \"{0}\"
FileUtils.Unable_to_delete_file_in=Unable to create file in \"{0}\"
FileUtils.File_already_exists=File "\{0}\" already exists 

ObjectConverterUtil.Error_translating_results_from_data_type_to_a_byte[]._1=Error translating results from data type {0} to a byte[].
ObjectConverterUtil.Error_translating_results_from_data_type_to_a_byte[]._2=Error translating results from data type {0} to a byte[].
ObjectConverterUtil.Object_type_not_supported_for_object_conversion._3=Object type {0} not supported for object conversion.

StringUtil.requiredToSuppliedParameterMismatch = {0} parameter{1} supplied, but {2} parameter{3} required: "{4}" => "{5}"

InvalidPropertyException.message=Property ''{0}'' with value ''{1}'' is not a valid {2}.

PropertiesUtils.failed_to_resolve_property=failed to completely resolve the property value for key {0}
