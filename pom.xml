<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.jboss.bqt</groupId>
  <artifactId>parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>BQT JDBC Query Execution Framework</name>
  <description>The BQT framework enables JDBC query testing and results validation</description>
  <url>${site.url}</url>
  <inceptionYear>2003</inceptionYear>
  
  	<organization>
		<name>JBoss, a division of Red Hat</name>
		<url>http://www.jboss.org</url>
	</organization>
  
  	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
			<!--url>http://www.gnu.org/licenses/lgpl.html</url-->
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>  

  <scm>
    <connection>scm:git:git://github.com/vhalbert/SQLBulkQueryTool.git</connection>
    <developerConnection>scm:git:git@github.com:vhalbert/SQLBulkQueryTool.git</developerConnection>
    <!-- url>http://github.com/ModeShape/modeshape</url-->
  </scm>
  
  	<developers>
		<developer>
			<name>Van Halbert</name>
			<id>vhalbert@redhat.com</id>
			<email>vhalbert@redhat.com</email>
			<organization>JBoss, a division of Red Hat</organization>
			<roles>
				<role>Project Lead</role>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
	</developers>

  <properties>
		<!--
			These are properties used in the database profiles. Must initialize
			them to be empty so that Maven applies them via filtering to the
			resources. If a project needs files filtered, however, make sure to
			include a 'testResources' fragment in the 'build' section of the
			child project POM to say which files need to be filtered. See the
			"modeshape-integration" or "extensions/modeshape-connector-store-jpa"
			project POMs for examples.
		-->
		
        <int.database />
        <int.driver />
        <int.url />
        <int.username />
        <int.password />
        <int.scriptfile />
        <int.rdbms_type />
        <int.delim />
		
		
		<jdbc.hsqldb.version>1.8.0.2</jdbc.hsqldb.version> 
        <jdbc.h2.version>1.2.124</jdbc.h2.version>

    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    	<slf4j.api.version>1.6.1</slf4j.api.version>
		<slf4j.log4j.version>1.6.1</slf4j.log4j.version>
    	<log4j.version>1.2.16</log4j.version>
    	
    	<apache.ant.version>1.7.0</apache.ant.version>
    	
   		<maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>
    	<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.source.plugin.version>2.1.2</maven.source.plugin.version>
		<maven.resources.plugin.version>2.4.3</maven.resources.plugin.version>
		<maven.deploy.plugin.version>2.5</maven.deploy.plugin.version>
		<maven.surefire.plugin.version>2.8</maven.surefire.plugin.version>
		
        <rootDir>${project.basedir}</rootDir>

  </properties>
  
  	<modules>
		<module>core</module>
		<module>framework</module>
		<module>client</module>
        <module>distro</module>
	</modules>

  <dependencies>

  
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>2.0</version>
    </dependency>
					

  </dependencies>
  
	<dependencyManagement>
		<dependencies>
		
			<dependency>
				<groupId>org.jboss.bqt</groupId>
				<artifactId>core</artifactId>
				<version>${project.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.jboss.bqt</groupId>
				<artifactId>framework</artifactId>
				<version>${project.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.jboss.bqt</groupId>
				<artifactId>client</artifactId>
				<version>${project.version}</version>
			</dependency>

      <!--
      Declare all dependency versions and default scopes here, but not optional.
      Each module should declare it's direct dependency and possibily overwrite scope/optional.
      -->
 	
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.4</version>
			</dependency>
			
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>6.0</version>
			</dependency>

			
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>		
			
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.log4j.version}</version>
			</dependency>				

			<dependency>
				<groupId>jdom</groupId>
				<artifactId>jdom</artifactId>
				<version>1.0</version>
			</dependency>
			
            <dependency>
	            <groupId>org.apache.ant</groupId>
	            <artifactId>ant</artifactId>
	            <version>${apache.ant.version}</version>
            </dependency>

            <dependency>
	            <groupId>org.apache.ant</groupId>
	            <artifactId>ant-launcher</artifactId>
	            <version>${apache.ant.version}</version>
	        </dependency>
	        
            <dependency>
                <groupId>hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${jdbc.hsqldb.version}</version>
                <scope>test</scope>
            </dependency>	 
          
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${jdbc.h2.version}</version>
                <scope>test</scope>
            </dependency>                 
	</dependencies>
</dependencyManagement>  

<build>
    <plugins>
    <!-- Specify the compiler options and settings -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven.compiler.plugin.version}</version>
            <configuration>
                <source>1.6</source>
                <target>1.6</target>
                <showDeprecation>false</showDeprecation>
                <showWarnings>false</showWarnings>
            </configuration>
      </plugin>
    </plugins>
</build>

	<profiles>
	   <profile>
            <id>integration_hsql</id>
            <properties>
                <int.database>hsqldb</int.database>
                <int.driver>org.hsqldb.jdbcDriver</int.driver>
                <int.url>jdbc:hsqldb:file:./target/db:modeshape</int.url>
                <int.username>sa</int.username>
                <int.password />
                <int.scriptfile>src/test/resources/customer-schema.sql</int.scriptfile>
                <int.rdbms_type>hsql</int.rdbms_type>
                <int.delim>;</int.delim>
            </properties>
            <modules>
                <module>integration</module>
            </modules>
    </profile>
       <profile>
            <!--
                This profile is activated manually, as in "mvn ... -P integration ..."
            -->
            <id>integration_h2</id>
            <properties>
                <int.database>h2</int.database>
                <int.driver>org.h2.Driver</int.driver>
                <int.url>jdbc:h2:file:${project.basedir}/target/db</int.url>
                <int.username></int.username>
                <int.password />
                <int.scriptfile>src/test/resources/customer-schema.sql</int.scriptfile>
                <int.rdbms_type>h2</int.rdbms_type>
                <int.delim>;</int.delim>
            </properties>
            <modules>
                <module>integration</module>
            </modules>
    </profile>
	</profiles>
</project>
